{"version":3,"sources":["components/ContactAddForm/ContactAddForm.module.css","components/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Container/Container.module.css","Redux/contacts/contactsSlice.js","Redux/contacts/contacts-actions.js","Redux/contacts/contacts-reducer.js","Redux/store.js","components/ContactAddForm/ContactAddForm.js","components/ContactListItem/ContactListItem.js","Redux/contacts/contacts-selectors.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Container/Container.js","components/App.js","index.js"],"names":["module","exports","contactsAPI","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getContacts","query","providesTags","deleteContact","mutation","contactId","url","method","invalidatesTags","addContact","newContact","body","content","useGetContactsQuery","useAddContactMutation","useDeleteContactMutation","filterContact","createAction","filter","createReducer","_","payload","combineReducers","store","configureStore","reducer","middleware","getDefaultMiddleware","setupListeners","dispatch","form","styles","label","input","button","ContactAddForm","useState","name","setName","phone","setPhone","data","isLoading","handleChange","e","target","value","resetForm","onSubmit","preventDefault","some","item","toLowerCase","toast","error","success","className","type","pattern","title","required","onChange","placeholder","disabled","text","span","ContactListItem","contact","isDeleting","id","onClick","filterValue","state","list","ContactList","contacts","setContacts","useSelector","useEffect","includes","map","Filter","useDispatch","length","event","Container","children","container","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d263e874.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactAddForm_form__ZXSUw\",\"label\":\"ContactAddForm_label__3Gm0d\",\"input\":\"ContactAddForm_input__22sv_\",\"button\":\"ContactAddForm_button__1TJD_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"ContactListItem_text__1u7kR\",\"span\":\"ContactListItem_span__1FNN_\",\"button\":\"ContactListItem_button__3msZN\",\"item\":\"ContactListItem_item__3RDV5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__tXik5\",\"input\":\"Filter_input__3HJ2A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__36zLH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1GRnl\"};","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nexport const contactsAPI = createApi({\r\n  reducerPath: \"contactsAPI\",\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: \"https://61b4f9a80e84b70017331a21.mockapi.io/\",\r\n  }),\r\n  tagTypes: [\"Contacts\"],\r\n  endpoints: (builder) => ({\r\n    getContacts: builder.query({\r\n      query: () => \"/contacts\",\r\n      providesTags: [\"Contacts\"],\r\n    }),\r\n    deleteContact: builder.mutation({\r\n      query: (contactId) => ({\r\n        url: `/contacts/${contactId}`,\r\n        method: \"DELETE\",\r\n      }),\r\n      invalidatesTags: [\"Contacts\"],\r\n    }),\r\n    addContact: builder.mutation({\r\n      query: (newContact) => ({\r\n        url: \"/contacts\",\r\n        method: \"POST\",\r\n        body: {\r\n          content: newContact,\r\n        },\r\n      }),\r\n      invalidatesTags: [\"Contacts\"],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetContactsQuery,\r\n  useAddContactMutation,\r\n  useDeleteContactMutation,\r\n} = contactsAPI;\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const filterContact = createAction(\"contacts/filter\");\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport { filterContact } from \"./contacts-actions\";\r\n\r\nconst filter = createReducer(\"\", {\r\n  [filterContact]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  filter,\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { setupListeners } from \"@reduxjs/toolkit/query\";\r\nimport { contactsAPI } from \"./contacts/contactsSlice\";\r\nimport filter from \"./contacts/contacts-reducer\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    [contactsAPI.reducerPath]: contactsAPI.reducer,\r\n    filterValue: filter,\r\n  },\r\n  middleware: (getDefaultMiddleware) => [\r\n    ...getDefaultMiddleware(),\r\n    contactsAPI.middleware,\r\n  ],\r\n});\r\n\r\nsetupListeners(store.dispatch);\r\n","import { useState } from \"react\";\r\nimport {\r\n  useGetContactsQuery,\r\n  useAddContactMutation,\r\n} from \"../../Redux/contacts/contactsSlice\";\r\nimport { toast } from \"react-toastify\";\r\nimport styles from \"./ContactAddForm.module.css\";\r\n\r\nconst { form, label, input, button } = styles;\r\n\r\nfunction ContactAddForm() {\r\n  const [name, setName] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const { data } = useGetContactsQuery();\r\n  const [addContact, { isLoading }] = useAddContactMutation();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"phone\":\r\n        setPhone(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (data.some((item) => item.name.toLowerCase() === name.toLowerCase())) {\r\n      toast.error(`${name} is already in contacts`);\r\n      return;\r\n    }\r\n    addContact({ name, phone });\r\n    toast.success(`${name} added to contact list`);\r\n    resetForm();\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setName(\"\");\r\n    setPhone(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={form}>\r\n      <label className={label}>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ]) ? [a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={handleChange}\r\n          placeholder=\"Ivan Ivanov\"\r\n          className={input}\r\n        />\r\n      </label>\r\n      <label className={label}>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChange}\r\n          value={phone}\r\n          placeholder=\"+7 (999) 999-99-99\"\r\n          className={input}\r\n        />\r\n      </label>\r\n      <button type=\"submit\" disabled={isLoading} className={button}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ContactAddForm;\r\n","import PropTypes from \"prop-types\";\nimport { useDeleteContactMutation } from \"../../Redux/contacts/contactsSlice\";\nimport styles from \"./ContactListItem.module.css\";\n\nconst { text, span, button, item } = styles;\n\nconst ContactListItem = ({ contact }) => {\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n  return (\n    <li id={contact.id} className={item}>\n      <p className={text}>\n        {contact.name}: <span className={span}>{contact.phone}</span>\n      </p>\n      <button\n        type=\"button\"\n        onClick={() => deleteContact(contact.id)}\n        disabled={isDeleting}\n        title=\"Delete\"\n        className={button}\n      >\n        {isDeleting ? \"Deleting...\" : \"Delete\"}\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  contact: PropTypes.object,\n  deleteContact: PropTypes.func,\n};\n\nexport default ContactListItem;\n","export const filterValue = (state) => state.filterValue.filter;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport ContactListItem from \"../ContactListItem\";\r\nimport { useGetContactsQuery } from \"../../Redux/contacts/contactsSlice\";\r\nimport { filterValue } from \"../../Redux/contacts/contacts-selectors\";\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nconst { list } = styles;\r\n\r\nconst ContactList = () => {\r\n  const [contacts, setContacts] = useState([]);\r\n  const { data, isLoading } = useGetContactsQuery();\r\n  const value = useSelector(filterValue);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      setContacts(\r\n        data.filter(({ name }) =>\r\n          name.toLowerCase().includes(value.toLowerCase())\r\n        )\r\n      );\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }, [data, value]);\r\n\r\n  return (\r\n    <ul className={list}>\r\n      {contacts.map((contact) => (\r\n        <ContactListItem key={contact.id} contact={contact} />\r\n      ))}\r\n      {isLoading && <h2>Loading...</h2>}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  value: PropTypes.string,\r\n  useGetContactsQuery: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { filterValue } from \"../../Redux/contacts/contacts-selectors\";\r\nimport { useGetContactsQuery } from \"../../Redux/contacts/contactsSlice\";\r\nimport { filterContact } from \"../../Redux/contacts/contacts-actions\";\r\nimport styles from \"./Filter.module.css\";\r\n\r\nconst { label, input } = styles;\r\n\r\nconst Filter = () => {\r\n  const dispatch = useDispatch();\r\n  const filter = useSelector(filterValue);\r\n  const { data, isLoading } = useGetContactsQuery();\r\n\r\n  if (!isLoading && !data.length)\r\n    return <p>Your phonebook is empty. Please add contact.</p>;\r\n  return (\r\n    <label className={label}>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={(event) => dispatch(filterContact(event.target.value))}\r\n        required\r\n        className={input}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from \"prop-types\";\r\nimport styles from \"./Container.module.css\";\r\n\r\nfunction Container({ children }) {\r\n  return <div className={styles.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./App.css\";\r\nimport ContactAddForm from \"./ContactAddForm\";\r\nimport ContactList from \"./ContactList\";\r\nimport Filter from \"./Filter\";\r\nimport Container from \"./Container\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Container>\r\n      <h1>Phonebook</h1>\r\n      <ToastContainer />\r\n      <ContactAddForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./Redux/store\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}